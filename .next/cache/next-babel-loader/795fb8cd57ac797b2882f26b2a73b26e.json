{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\search.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: 500,\n      '& > * + *': {\n        marginTop: theme.spacing(3)\n      }\n    }\n  };\n});\nexport default function Search(_ref) {\n  _s();\n\n  var _this = this;\n\n  var setFilter = _ref.setFilter,\n      options = _ref.options;\n  var classes = useStyles();\n  console.log(options);\n\n  var handleChange = function handleChange(e, values) {\n    var tags = [];\n    values.forEach(function (value) {\n      tags.push(value.name);\n    });\n    setFilter(tags);\n  };\n\n  return __jsx(Autocomplete, {\n    multiple: true,\n    id: \"tags-standard\",\n    options: options,\n    onChange: handleChange,\n    getOptionLabel: function getOptionLabel(option) {\n      return option.name;\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        variant: \"standard\",\n        placeholder: \"Technologies\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  });\n}\n\n_s(Search, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/search.tsx"],"names":["Autocomplete","makeStyles","TextField","useStyles","theme","root","width","marginTop","spacing","Search","setFilter","options","classes","console","log","handleChange","e","values","tags","forEach","value","push","name","option","params"],"mappings":";;;;;;;AAAA,OAAOA,YAAP,MAAyB,+BAAzB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,GADH;AAEJ,mBAAa;AACXC,QAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,GAAZ;AAAA,CAAD,CAA5B;AASA,eAAe,SAASC,MAAT,OAAsC;AAAA;;AAAA;;AAAA,MAArBC,SAAqB,QAArBA,SAAqB;AAAA,MAAVC,OAAU,QAAVA,OAAU;AACnD,MAAMC,OAAO,GAAGT,SAAS,EAAzB;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;;AACA,MAAMI,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAIC,MAAJ,EAAe;AAChC,QAAIC,IAAI,GAAG,EAAX;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAe,UAAAC,KAAK,EAAI;AACpBF,MAAAA,IAAI,CAACG,IAAL,CAAUD,KAAK,CAACE,IAAhB;AACH,KAFD;AAGAZ,IAAAA,SAAS,CAACQ,IAAD,CAAT;AACH,GAND;;AAOA,SACI,MAAC,YAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,OAAO,EAAEP,OAHX;AAIE,IAAA,QAAQ,EAAEI,YAJZ;AAKE,IAAA,cAAc,EAAE,wBAACQ,MAAD;AAAA,aAAYA,MAAM,CAACD,IAAnB;AAAA,KALlB;AAME,IAAA,WAAW,EAAE,qBAACE,MAAD;AAAA,aACX,MAAC,SAAD,eACMA,MADN;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,WAAW,EAAC,cAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADW;AAAA,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBD;;GA1BuBf,M;UACNN,S;;;KADMM,M","sourcesContent":["import Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Search({setFilter, options}) {\r\n  const classes = useStyles();\r\n  console.log(options);\r\n  const handleChange = (e, values) => {\r\n      let tags = [];\r\n      values.forEach(value => {\r\n          tags.push(value.name);\r\n      })\r\n      setFilter(tags);\r\n  }\r\n  return (\r\n      <Autocomplete\r\n        multiple\r\n        id=\"tags-standard\"\r\n        options={options}\r\n        onChange={handleChange}\r\n        getOptionLabel={(option) => option.name}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            variant=\"standard\"\r\n            placeholder=\"Technologies\"\r\n          />\r\n        )}\r\n      />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}