{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\lists\\\\Item.tsx\";\nvar __jsx = React.createElement;\n\n/* Lists/Item Component - both static and animated versions*/\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport Date from '../global/date';\nexport function ListItem({\n  data\n}) {\n  return __jsx(Link, {\n    href: `/${data.type}/${data.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none'\n    },\n    className: \"listItem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"listItemContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"w-full flex flex-wrap justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"font-bold float-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 29\n    }\n  }, data.title), __jsx(\"div\", {\n    className: \"text-sm float-right text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 29\n    }\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 33\n    }\n  })), __jsx(\"div\", {\n    style: {\n      flexBasis: '100%',\n      height: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    className: \"text-sm px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }\n  }, data.subtitle), __jsx(\"div\", {\n    style: {\n      flexBasis: '100%',\n      height: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }), data.tags && __jsx(\"div\", {\n    className: \"text-md flex flex-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 33\n    }\n  }, data.tags.map(tag => __jsx(\"div\", {\n    className: \"tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 41\n    }\n  }, __jsx(Link, {\n    key: tag,\n    href: `/tags/${tag}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 45\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 49\n    }\n  }, tag)))))))));\n}\n\nconst createCardFlipId = index => `listItem-${index}`;\n\nconst shouldFlip = index => (prev, current) => index === prev || index === current;\n\nexport function ExpandedItem({\n  data,\n  index,\n  onClick\n}) {\n  return __jsx(Flipped, {\n    flipId: createCardFlipId(index),\n    stagger: \"card\",\n    onStart: el => {\n      setTimeout(() => {\n        el.classList.add(\"animated-in\");\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItem\",\n    onClick: () => onClick(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(Flipped, {\n    inverseFlipId: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItemContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, data.image && __jsx(React.Fragment, null, __jsx(Flipped, {\n    flipId: `avatar-${index}`,\n    stagger: \"card-content\",\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"avatar avatarExpanded\",\n    style: {\n      backgroundImage: `url(${data.image})`,\n      backgroundPosition: 'center',\n      backgroundSize: '120px 120px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, data.title && __jsx(React.Fragment, null, __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"font-bold text-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, data.title)), __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 41\n    }\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 66\n    }\n  })))), data.tags && __jsx(React.Fragment, null, __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"text-md flex justify-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 41\n    }\n  }, data.tags.slice(0, 2).map(tag => __jsx(\"div\", {\n    className: \"bg-red-400 px-4 m-2 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 49\n    }\n  }, __jsx(Link, {\n    href: `/tags/${tag}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 53\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 57\n    }\n  }, tag)))))))), (data.type == 'project' || data.post) && __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: data.type == 'project' ? `/projects/${data.id}` : data.post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 37\n    }\n  }, \"Read more \\u2192\")))))));\n}\n;","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/lists/Item.tsx"],"names":["Link","React","Flipped","Date","ListItem","data","type","id","textDecoration","title","startDate","endDate","flexBasis","height","subtitle","tags","map","tag","createCardFlipId","index","shouldFlip","prev","current","ExpandedItem","onClick","el","setTimeout","classList","add","image","backgroundImage","backgroundPosition","backgroundSize","slice","post"],"mappings":"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","sourcesContent":["/* Lists/Item Component - both static and animated versions*/\r\n\r\nimport Link from \"next/link\";\r\nimport React, { useState } from \"react\";\r\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\r\nimport Date from '../global/date';\r\n\r\nexport function ListItem({ data }) {\r\n    return (\r\n            <Link href={`/${data.type}/${data.id}`}>\r\n                <a style={{ textDecoration: 'none' }} className=\"listItem\">\r\n                    <div className=\"listItemContent\">\r\n                        <div className=\"w-full flex flex-wrap justify-between\">\r\n                            <div className=\"font-bold float-left\">{data.title}</div>\r\n                            <div className=\"text-sm float-right text-gray-700\">\r\n                                <Date startDate={data.startDate} endDate={data.endDate} />\r\n                            </div>\r\n                            <div style={{ flexBasis: '100%', height: '0' }} />\r\n                            <div className=\"text-sm px-2\">{data.subtitle}</div>\r\n                            <div style={{ flexBasis: '100%', height: '0' }} />\r\n                            {data.tags && (\r\n                                <div className=\"text-md flex flex-wrap\">\r\n                                    {data.tags.map((tag) => (\r\n                                        <div className=\"tag\">\r\n                                            <Link key={tag} href={`/tags/${tag}`}>\r\n                                                <a>{tag}</a>\r\n                                            </Link>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            </Link>\r\n    );\r\n}\r\n\r\nconst createCardFlipId = index => `listItem-${index}`;\r\n\r\nconst shouldFlip = index => (prev, current) =>\r\n    index === prev || index === current;\r\n\r\nexport function ExpandedItem({ data, index, onClick }) {\r\n    return (\r\n        <Flipped\r\n            flipId={createCardFlipId(index)}\r\n            stagger=\"card\"\r\n            onStart={el => {\r\n                setTimeout(() => {\r\n                    el.classList.add(\"animated-in\");\r\n                }, 400);\r\n            }}\r\n        >\r\n            <div className=\"expandedListItem\" onClick={() => onClick(index)}>\r\n                <Flipped inverseFlipId={createCardFlipId(index)}>\r\n                    <div className=\"expandedListItemContent\">\r\n                        {data.image &&\r\n                            <>\r\n                                <Flipped\r\n                                    flipId={`avatar-${index}`}\r\n                                    stagger=\"card-content\"\r\n                                    delayUntil={createCardFlipId(index)}\r\n                                >\r\n                                    <div className=\"avatar avatarExpanded\" style={{ backgroundImage: `url(${data.image})`, backgroundPosition: 'center', backgroundSize: '120px 120px' }} />\r\n                                </Flipped>\r\n                            </>\r\n                        }\r\n                        <div>\r\n                            {data.title &&\r\n                                <>\r\n                                    <Flipped\r\n                                        flipId={`description-${index}-${data.title}`}\r\n                                        stagger=\"card-content\"\r\n                                        shouldFlip={shouldFlip(index)}\r\n                                        delayUntil={createCardFlipId(index)}\r\n                                    >\r\n                                        <div className=\"font-bold text-lg\">{data.title}</div>\r\n                                    </Flipped>\r\n                                    <Flipped\r\n                                        flipId={`description-${index}-${data.title}`}\r\n                                        stagger=\"card-content\"\r\n                                        shouldFlip={shouldFlip(index)}\r\n                                        delayUntil={createCardFlipId(index)}\r\n                                    >\r\n                                        <div className=\"text-sm\"><Date startDate={data.startDate} endDate={data.endDate} /></div>\r\n                                    </Flipped>\r\n                                </>\r\n                            }\r\n                            {data.tags &&\r\n                                <>\r\n                                    <Flipped\r\n                                        flipId={`description-${index}-${data.title}`}\r\n                                        stagger=\"card-content\"\r\n                                        shouldFlip={shouldFlip(index)}\r\n                                        delayUntil={createCardFlipId(index)}\r\n                                    >\r\n                                        <div className=\"text-md flex justify-around\">\r\n                                            {data.tags.slice(0, 2).map(tag =>\r\n                                                <div className=\"bg-red-400 px-4 m-2 rounded\">\r\n                                                    <Link href={`/tags/${tag}`}>\r\n                                                        <a>{tag}</a>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        </div>\r\n                                    </Flipped>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                        {(data.type == 'project' || data.post) &&\r\n                            <div className=\"text-center\">\r\n                                <Link href={data.type == 'project' ? `/projects/${data.id}` : data.post}>\r\n                                    <a>Read more &rarr;</a>\r\n                                </Link>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </Flipped>\r\n            </div>\r\n        </Flipped>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}