{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\animatedlist.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\n\nvar listData = _toConsumableArray(Array(7).keys());\n\nvar createCardFlipId = function createCardFlipId(index) {\n  return \"listItem-\".concat(index);\n};\n\nvar shouldFlip = function shouldFlip(index) {\n  return function (prev, current) {\n    return index === prev || index === current;\n  };\n};\n\nvar ListItem = function ListItem(_ref) {\n  var index = _ref.index,\n      _onClick = _ref.onClick;\n  return __jsx(Flipped, {\n    flipId: createCardFlipId(index),\n    stagger: \"card\",\n    shouldInvert: shouldFlip(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listItem\",\n    onClick: function onClick() {\n      return _onClick(index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Flipped, {\n    inverseFlipId: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"listItemContent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, __jsx(Flipped, {\n    flipId: \"avatar-\".concat(index),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"avatar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, listData.slice(0, 3).map(function (i) {\n    return __jsx(Flipped, {\n      flipId: \"description-\".concat(index, \"-\").concat(i),\n      stagger: \"card-content\",\n      shouldFlip: shouldFlip(index),\n      delayUntil: createCardFlipId(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }\n    }));\n  }))))));\n};\n\n_c = ListItem;\n\nvar ExpandedListItem = function ExpandedListItem(_ref2) {\n  var index = _ref2.index,\n      _onClick2 = _ref2.onClick;\n  return __jsx(Flipped, {\n    flipId: createCardFlipId(index),\n    stagger: \"card\",\n    onStart: function onStart(el) {\n      setTimeout(function () {\n        el.classList.add(\"animated-in\");\n      }, 400);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItem\",\n    onClick: function onClick() {\n      return _onClick2(index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Flipped, {\n    inverseFlipId: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItemContent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(Flipped, {\n    flipId: \"avatar-\".concat(index),\n    stagger: \"card-content\",\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"avatar avatarExpanded\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    className: \"description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, listData.slice(0, 3).map(function (i) {\n    return __jsx(Flipped, {\n      flipId: \"description-\".concat(index, \"-\").concat(i),\n      stagger: \"card-content\",\n      delayUntil: createCardFlipId(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }));\n  })), __jsx(\"div\", {\n    className: \"additional-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, listData.slice(0, 3).map(function (i) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    });\n  }))))));\n};\n\n_c2 = ExpandedListItem;\n\nvar AnimatedList = /*#__PURE__*/function (_Component) {\n  _inherits(AnimatedList, _Component);\n\n  var _super = _createSuper(AnimatedList);\n\n  function AnimatedList() {\n    var _this2;\n\n    _classCallCheck(this, AnimatedList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      focused: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"onClick\", function (index) {\n      return _this2.setState({\n        focused: _this2.state.focused === index ? null : index\n      });\n    });\n\n    return _this2;\n  }\n\n  _createClass(AnimatedList, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(Flipper, {\n        flipKey: this.state.focused,\n        className: \"staggered-list-content\",\n        spring: \"gentle\",\n        staggerConfig: {\n          card: {\n            reverse: this.state.focused !== null\n          }\n        },\n        decisionData: this.state.focused,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, __jsx(\"ul\", {\n        className: \"list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, listData.map(function (index) {\n        return __jsx(\"li\", {\n          key: index,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        }, index === _this3.state.focused ? __jsx(ExpandedListItem, {\n          index: _this3.state.focused,\n          onClick: _this3.onClick,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }\n        }) : __jsx(ListItem, {\n          index: index,\n          key: index,\n          onClick: _this3.onClick,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return AnimatedList;\n}(Component);\n\nexport { AnimatedList as default };\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(__jsx(AnimatedList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 17\n  }\n}), rootElement);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListItem\");\n$RefreshReg$(_c2, \"ExpandedListItem\");","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/animatedlist.tsx"],"names":["React","Component","ReactDOM","Flipper","Flipped","listData","Array","keys","createCardFlipId","index","shouldFlip","prev","current","ListItem","onClick","slice","map","i","ExpandedListItem","el","setTimeout","classList","add","AnimatedList","focused","setState","state","card","reverse","rootElement","document","getElementById","render"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,oBAAjC;;AAEA,IAAMC,QAAQ,sBAAOC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,EAAP,CAAd;;AACA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK;AAAA,4BAAgBA,KAAhB;AAAA,CAA9B;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAD,KAAK;AAAA,SAAI,UAACE,IAAD,EAAOC,OAAP;AAAA,WAC1BH,KAAK,KAAKE,IAAV,IAAkBF,KAAK,KAAKG,OADF;AAAA,GAAJ;AAAA,CAAxB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAwB;AAAA,MAArBJ,KAAqB,QAArBA,KAAqB;AAAA,MAAdK,QAAc,QAAdA,OAAc;AACvC,SACE,MAAC,OAAD;AACE,IAAA,MAAM,EAAEN,gBAAgB,CAACC,KAAD,CAD1B;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,YAAY,EAAEC,UAAU,CAACD,KAAD,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMK,QAAO,CAACL,KAAD,CAAb;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,aAAa,EAAED,gBAAgB,CAACC,KAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,MAAM,mBAAYA,KAAZ,CADR;AAEE,IAAA,OAAO,EAAC,cAFV;AAGE,IAAA,UAAU,EAAEC,UAAU,CAACD,KAAD,CAHxB;AAIE,IAAA,UAAU,EAAED,gBAAgB,CAACC,KAAD,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EASE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACU,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,CAAyB,UAAAC,CAAC;AAAA,WACzB,MAAC,OAAD;AACE,MAAA,MAAM,wBAAiBR,KAAjB,cAA0BQ,CAA1B,CADR;AAEE,MAAA,OAAO,EAAC,cAFV;AAGE,MAAA,UAAU,EAAEP,UAAU,CAACD,KAAD,CAHxB;AAIE,MAAA,UAAU,EAAED,gBAAgB,CAACC,KAAD,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADyB;AAAA,GAA1B,CADH,CATF,CADF,CADF,CALF,CADF;AAkCD,CAnCD;;KAAMI,Q;;AAqCN,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAwB;AAAA,MAArBT,KAAqB,SAArBA,KAAqB;AAAA,MAAdK,SAAc,SAAdA,OAAc;AAC/C,SACE,MAAC,OAAD;AACE,IAAA,MAAM,EAAEN,gBAAgB,CAACC,KAAD,CAD1B;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,OAAO,EAAE,iBAAAU,EAAE,EAAI;AACbC,MAAAA,UAAU,CAAC,YAAM;AACfD,QAAAA,EAAE,CAACE,SAAH,CAAaC,GAAb,CAAiB,aAAjB;AACD,OAFS,EAEP,GAFO,CAAV;AAGD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,OAAO,EAAE;AAAA,aAAMR,SAAO,CAACL,KAAD,CAAb;AAAA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,aAAa,EAAED,gBAAgB,CAACC,KAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,MAAM,mBAAYA,KAAZ,CADR;AAEE,IAAA,OAAO,EAAC,cAFV;AAGE,IAAA,UAAU,EAAED,gBAAgB,CAACC,KAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAQE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACU,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,CAAyB,UAAAC,CAAC;AAAA,WACzB,MAAC,OAAD;AACE,MAAA,MAAM,wBAAiBR,KAAjB,cAA0BQ,CAA1B,CADR;AAEE,MAAA,OAAO,EAAC,cAFV;AAGE,MAAA,UAAU,EAAET,gBAAgB,CAACC,KAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADyB;AAAA,GAA1B,CADH,CARF,EAmBE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QAAQ,CAACU,KAAT,CAAe,CAAf,EAAkB,CAAlB,EAAqBC,GAArB,CAAyB,UAAAC,CAAC;AAAA,WACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB;AAAA,GAA1B,CADH,CAnBF,CADF,CADF,CATF,CADF;AAyCD,CA1CD;;MAAMC,gB;;IA4CeK,Y;;;;;;;;;;;;;;;;6DACX;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;;+DACE,UAAAf,KAAK;AAAA,aACb,OAAKgB,QAAL,CAAc;AACZD,QAAAA,OAAO,EAAE,OAAKE,KAAL,CAAWF,OAAX,KAAuBf,KAAvB,GAA+B,IAA/B,GAAsCA;AADnC,OAAd,CADa;AAAA,K;;;;;;;6BAIN;AAAA;;AACP,aACE,MAAC,OAAD;AACE,QAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWF,OADtB;AAEE,QAAA,SAAS,EAAC,wBAFZ;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,aAAa,EAAE;AACbG,UAAAA,IAAI,EAAE;AACJC,YAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWF,OAAX,KAAuB;AAD5B;AADO,SAJjB;AASE,QAAA,YAAY,EAAE,KAAKE,KAAL,CAAWF,OAT3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGnB,QAAQ,CAACW,GAAT,CAAa,UAAAP,KAAK,EAAI;AACrB,eACE;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,KAAK,KAAK,MAAI,CAACiB,KAAL,CAAWF,OAArB,GACC,MAAC,gBAAD;AACE,UAAA,KAAK,EAAE,MAAI,CAACE,KAAL,CAAWF,OADpB;AAEE,UAAA,OAAO,EAAE,MAAI,CAACV,OAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,GAMC,MAAC,QAAD;AAAU,UAAA,KAAK,EAAEL,KAAjB;AAAwB,UAAA,GAAG,EAAEA,KAA7B;AAAoC,UAAA,OAAO,EAAE,MAAI,CAACK,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,CADF;AAYD,OAbA,CADH,CAXF,CADF;AA8BD;;;;EArCuCb,S;;SAArBsB,Y;AAwCrB,IAAMM,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA7B,QAAQ,CAAC8B,MAAT,CAAgB,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAkCH,WAAlC","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\r\n\r\nconst listData = [...Array(7).keys()];\r\nconst createCardFlipId = index => `listItem-${index}`;\r\n\r\nconst shouldFlip = index => (prev, current) =>\r\n  index === prev || index === current;\r\n\r\nconst ListItem = ({ index, onClick }) => {\r\n  return (\r\n    <Flipped\r\n      flipId={createCardFlipId(index)}\r\n      stagger=\"card\"\r\n      shouldInvert={shouldFlip(index)}\r\n    >\r\n      <div className=\"listItem\" onClick={() => onClick(index)}>\r\n        <Flipped inverseFlipId={createCardFlipId(index)}>\r\n          <div className=\"listItemContent\">\r\n            <Flipped\r\n              flipId={`avatar-${index}`}\r\n              stagger=\"card-content\"\r\n              shouldFlip={shouldFlip(index)}\r\n              delayUntil={createCardFlipId(index)}\r\n            >\r\n              <div className=\"avatar\" />\r\n            </Flipped>\r\n            <div className=\"description\">\r\n              {listData.slice(0, 3).map(i => (\r\n                <Flipped\r\n                  flipId={`description-${index}-${i}`}\r\n                  stagger=\"card-content\"\r\n                  shouldFlip={shouldFlip(index)}\r\n                  delayUntil={createCardFlipId(index)}\r\n                >\r\n                  <div />\r\n                </Flipped>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Flipped>\r\n      </div>\r\n    </Flipped>\r\n  );\r\n};\r\n\r\nconst ExpandedListItem = ({ index, onClick }) => {\r\n  return (\r\n    <Flipped\r\n      flipId={createCardFlipId(index)}\r\n      stagger=\"card\"\r\n      onStart={el => {\r\n        setTimeout(() => {\r\n          el.classList.add(\"animated-in\");\r\n        }, 400);\r\n      }}\r\n    >\r\n      <div className=\"expandedListItem\" onClick={() => onClick(index)}>\r\n        <Flipped inverseFlipId={createCardFlipId(index)}>\r\n          <div className=\"expandedListItemContent\">\r\n            <Flipped\r\n              flipId={`avatar-${index}`}\r\n              stagger=\"card-content\"\r\n              delayUntil={createCardFlipId(index)}\r\n            >\r\n              <div className=\"avatar avatarExpanded\" />\r\n            </Flipped>\r\n            <div className=\"description\">\r\n              {listData.slice(0, 3).map(i => (\r\n                <Flipped\r\n                  flipId={`description-${index}-${i}`}\r\n                  stagger=\"card-content\"\r\n                  delayUntil={createCardFlipId(index)}\r\n                >\r\n                  <div />\r\n                </Flipped>\r\n              ))}\r\n            </div>\r\n            <div className=\"additional-content\">\r\n              {listData.slice(0, 3).map(i => (\r\n                <div />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Flipped>\r\n      </div>\r\n    </Flipped>\r\n  );\r\n};\r\n\r\nexport default class AnimatedList extends Component {\r\n  state = { focused: null };\r\n  onClick = index =>\r\n    this.setState({\r\n      focused: this.state.focused === index ? null : index\r\n    });\r\n  render() {\r\n    return (\r\n      <Flipper\r\n        flipKey={this.state.focused}\r\n        className=\"staggered-list-content\"\r\n        spring=\"gentle\"\r\n        staggerConfig={{\r\n          card: {\r\n            reverse: this.state.focused !== null\r\n          }\r\n        }}\r\n        decisionData={this.state.focused}\r\n      >\r\n        <ul className=\"list\">\r\n          {listData.map(index => {\r\n            return (\r\n              <li key={index}>\r\n                {index === this.state.focused ? (\r\n                  <ExpandedListItem\r\n                    index={this.state.focused}\r\n                    onClick={this.onClick}\r\n                  />\r\n                ) : (\r\n                  <ListItem index={index} key={index} onClick={this.onClick} />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Flipper>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<AnimatedList />, rootElement);\r\n"]},"metadata":{},"sourceType":"module"}