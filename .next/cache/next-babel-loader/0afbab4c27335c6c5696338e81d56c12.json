{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\animatedlist.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Flipper } from \"react-flip-toolkit\";\nimport Item from \"./list/Item\";\n\nconst createCardFlipId = index => `listItem-${index}`;\n\nconst shouldFlip = index => (prev, current) => index === prev || index === current;\n\nexport default function AnimatedList({\n  data\n}) {\n  const {\n    0: focused,\n    1: setFocused\n  } = useState(null);\n\n  const handleChange = index => {\n    setFocused(focused === index ? null : index);\n  };\n\n  return __jsx(Flipper, {\n    flipKey: focused,\n    className: \"staggered-list-content\",\n    spring: \"gentle\",\n    staggerConfig: {\n      card: {\n        reverse: focused !== null\n      }\n    },\n    decisionData: focused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, data.map((item, i) => {\n    return __jsx(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, i === focused ? __jsx(ExpandedItem, {\n      data: data[i],\n      index: focused,\n      onClick: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    }) : __jsx(Item, {\n      data: data[i],\n      index: i,\n      key: i,\n      onClick: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/animatedlist.tsx"],"names":["React","useState","Flipper","Item","createCardFlipId","index","shouldFlip","prev","current","AnimatedList","data","focused","setFocused","handleChange","card","reverse","map","item","i","id"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAiC,oBAAjC;AAEA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAK,YAAWA,KAAM,EAApD;;AAEA,MAAMC,UAAU,GAAGD,KAAK,IAAI,CAACE,IAAD,EAAOC,OAAP,KAC1BH,KAAK,KAAKE,IAAV,IAAkBF,KAAK,KAAKG,OAD9B;;AAGA,eAAe,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAA8B;AACzC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMY,YAAY,GAAIR,KAAD,IAAW;AAC5BO,IAAAA,UAAU,CAACD,OAAO,KAAKN,KAAZ,GAAoB,IAApB,GAA2BA,KAA5B,CAAV;AACH,GAFD;;AAIA,SACE,MAAC,OAAD;AACE,IAAA,OAAO,EAAEM,OADX;AAEE,IAAA,SAAS,EAAC,wBAFZ;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,aAAa,EAAE;AACbG,MAAAA,IAAI,EAAE;AACJC,QAAAA,OAAO,EAAEJ,OAAO,KAAK;AADjB;AADO,KAJjB;AASE,IAAA,YAAY,EAAEA,OAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrB,WACE;AAAI,MAAA,GAAG,EAAED,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,CAAC,KAAKP,OAAN,GACC,MAAC,YAAD;AACE,MAAA,IAAI,EAAED,IAAI,CAACQ,CAAD,CADZ;AAEE,MAAA,KAAK,EAAEP,OAFT;AAGE,MAAA,OAAO,EAAEE,YAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAOC,MAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,IAAI,CAACQ,CAAD,CAAhB;AAAqB,MAAA,KAAK,EAAEA,CAA5B;AAA+B,MAAA,GAAG,EAAEA,CAApC;AAAuC,MAAA,OAAO,EAAEL,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADF;AAaD,GAdA,CADH,CAXF,CADF;AA+BH","sourcesContent":["import Link from \"next/link\";\r\nimport React, { useState } from \"react\";\r\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\r\nimport { Date } from \"./data\";\r\nimport Item from \"./list/Item\";\r\n\r\nconst createCardFlipId = index => `listItem-${index}`;\r\n\r\nconst shouldFlip = index => (prev, current) =>\r\n  index === prev || index === current;\r\n\r\nexport default function AnimatedList({data}) {\r\n    const [focused, setFocused] = useState(null);\r\n    \r\n    const handleChange = (index) => {\r\n        setFocused(focused === index ? null : index)\r\n    };\r\n  \r\n    return (\r\n      <Flipper\r\n        flipKey={focused}\r\n        className=\"staggered-list-content\"\r\n        spring=\"gentle\"\r\n        staggerConfig={{\r\n          card: {\r\n            reverse: focused !== null\r\n          }\r\n        }}\r\n        decisionData={focused}\r\n      >\r\n        <ul className=\"list\">\r\n          {data.map((item, i) => {\r\n            return (\r\n              <li key={item.id}>\r\n                {i === focused ? (\r\n                  <ExpandedItem\r\n                    data={data[i]}\r\n                    index={focused}\r\n                    onClick={handleChange}\r\n                  />\r\n                ) : (\r\n                  <Item data={data[i]} index={i} key={i} onClick={handleChange} />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Flipper>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}