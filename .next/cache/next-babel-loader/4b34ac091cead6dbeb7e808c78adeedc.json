{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\list\\\\ExpandedItem.tsx\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { Date } from \"../data\";\n\nconst createCardFlipId = index => `listItem-${index}`;\n\nconst shouldFlip = index => (prev, current) => index === prev || index === current;\n\nexport default function ExpandedItem({\n  data,\n  index,\n  onClick\n}) {\n  return __jsx(Flipped, {\n    flipId: createCardFlipId(index),\n    stagger: \"card\",\n    onStart: el => {\n      setTimeout(() => {\n        el.classList.add(\"animated-in\");\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItem\",\n    onClick: () => onClick(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Flipped, {\n    inverseFlipId: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItemContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(Flipped, {\n    flipId: `avatar-${index}`,\n    stagger: \"card-content\",\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"avatar avatarExpanded\",\n    style: {\n      backgroundImage: `url(${data.image})`,\n      backgroundPosition: 'center',\n      backgroundSize: '120px 120px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"font-bold text-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, data.title)), __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 48\n    }\n  }))), __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"text-md flex justify-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 43\n    }\n  }, data.tags.slice(0, 2).map(tag => __jsx(\"div\", {\n    className: \"bg-red-400 px-4 m-2 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }\n  }, __jsx(Link, {\n    href: `/tags/${tag}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 35\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 39\n    }\n  }, tag))))))), __jsx(\"div\", {\n    className: \"additional-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, data.description.map(i => __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, i)))))));\n}\n;","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/list/ExpandedItem.tsx"],"names":["Link","React","Flipped","Date","createCardFlipId","index","shouldFlip","prev","current","ExpandedItem","data","onClick","el","setTimeout","classList","add","backgroundImage","image","backgroundPosition","backgroundSize","title","startDate","endDate","tags","slice","map","tag","description","i"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport React, { useState } from \"react\";\r\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\r\nimport { Date } from \"../data\";\r\n\r\nconst createCardFlipId = index => `listItem-${index}`;\r\n\r\nconst shouldFlip = index => (prev, current) =>\r\n  index === prev || index === current;\r\n\r\nexport default function ExpandedItem({ data, index, onClick }){\r\n    return (\r\n      <Flipped\r\n        flipId={createCardFlipId(index)}\r\n        stagger=\"card\"\r\n        onStart={el => {\r\n          setTimeout(() => {\r\n            el.classList.add(\"animated-in\");\r\n          }, 400);\r\n        }}\r\n      >\r\n        <div className=\"expandedListItem\" onClick={() => onClick(index)}>\r\n          <Flipped inverseFlipId={createCardFlipId(index)}>\r\n            <div className=\"expandedListItemContent\">\r\n              <Flipped\r\n                flipId={`avatar-${index}`}\r\n                stagger=\"card-content\"\r\n                delayUntil={createCardFlipId(index)}\r\n              >\r\n              <div className=\"avatar avatarExpanded\" style={{backgroundImage: `url(${data.image})`, backgroundPosition: 'center', backgroundSize: '120px 120px'}} />\r\n              </Flipped>\r\n              <div>\r\n                  <Flipped\r\n                      flipId={`description-${index}-${data.title}`}\r\n                      stagger=\"card-content\"\r\n                      shouldFlip={shouldFlip(index)}\r\n                      delayUntil={createCardFlipId(index)}\r\n                      >\r\n                      <div className=\"font-bold text-lg\">{data.title}</div>\r\n                  </Flipped>\r\n                  <Flipped\r\n                      flipId={`description-${index}-${data.title}`}\r\n                      stagger=\"card-content\"\r\n                      shouldFlip={shouldFlip(index)}\r\n                      delayUntil={createCardFlipId(index)}\r\n                      >\r\n                      <div className=\"text-sm\"><Date startDate={data.startDate} endDate={data.endDate}/></div>\r\n                  </Flipped>\r\n                  <Flipped\r\n                      flipId={`description-${index}-${data.title}`}\r\n                      stagger=\"card-content\"\r\n                      shouldFlip={shouldFlip(index)}\r\n                      delayUntil={createCardFlipId(index)}\r\n                      >\r\n                                          <div className=\"text-md flex justify-around\">\r\n                          {data.tags.slice(0, 2).map(tag =>\r\n                              <div className=\"bg-red-400 px-4 m-2 rounded\">\r\n                                  <Link href={`/tags/${tag}`}>\r\n                                      <a>{tag}</a>\r\n                                  </Link>\r\n                              </div>\r\n                              )\r\n                          }\r\n                      </div>\r\n                  </Flipped>\r\n              </div>\r\n              <div className=\"additional-content\">\r\n                {data.description.map(i => (\r\n                    <p>\r\n                        {i}\r\n                    </p>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Flipped>\r\n        </div>\r\n      </Flipped>\r\n    );\r\n  };"]},"metadata":{},"sourceType":"module"}