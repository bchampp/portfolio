{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\animatedlist.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\nimport { Date } from \"./data\";\n\nvar listData = _toConsumableArray(Array(7).keys());\n\nvar createCardFlipId = function createCardFlipId(index) {\n  return \"listItem-\".concat(index);\n};\n\nvar shouldFlip = function shouldFlip(index) {\n  return function (prev, current) {\n    return index === prev || index === current;\n  };\n};\n\nvar ListItem = function ListItem(_ref) {\n  var data = _ref.data,\n      index = _ref.index,\n      _onClick = _ref.onClick;\n  console.log(data);\n  return __jsx(Flipped, {\n    flipId: createCardFlipId(index),\n    stagger: \"card\",\n    shouldInvert: shouldFlip(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"listItem\",\n    onClick: function onClick() {\n      return _onClick(index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Flipped, {\n    inverseFlipId: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"listItemContent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, __jsx(Flipped, {\n    flipId: \"avatar-\".concat(index),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"avatar\",\n    style: {\n      backgroundImage: \"url(\".concat(data.image, \")\"),\n      backgroundPosition: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(Flipped, {\n    flipId: \"description-\".concat(index, \"-\").concat(data.title),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"font-bold text-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, data.title)), __jsx(Flipped, {\n    flipId: \"description-\".concat(index, \"-\").concat(data.title),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 46\n    }\n  }))), __jsx(Flipped, {\n    flipId: \"description-\".concat(index, \"-\").concat(data.title),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"text-md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, data.tags.map(function (tag) {\n    return tag;\n  }))))))));\n};\n\n_c = ListItem;\n\nvar ExpandedListItem = function ExpandedListItem(_ref2) {\n  var data = _ref2.data,\n      index = _ref2.index,\n      _onClick2 = _ref2.onClick;\n  return __jsx(Flipped, {\n    flipId: createCardFlipId(index),\n    stagger: \"card\",\n    onStart: function onStart(el) {\n      setTimeout(function () {\n        el.classList.add(\"animated-in\");\n      }, 400);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItem\",\n    onClick: function onClick() {\n      return _onClick2(index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, __jsx(Flipped, {\n    inverseFlipId: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItemContent\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, __jsx(Flipped, {\n    flipId: \"avatar-\".concat(index),\n    stagger: \"card-content\",\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"avatar avatarExpanded\",\n    style: {\n      backgroundImage: \"url(\".concat(data.image, \")\"),\n      backgroundPosition: 'center',\n      backgroundSize: 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(Flipped, {\n    flipId: \"description-\".concat(index, \"-\").concat(data.title),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"font-bold text-lg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, data.title)), __jsx(Flipped, {\n    flipId: \"description-\".concat(index, \"-\").concat(data.title),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"text-sm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 46\n    }\n  }))), __jsx(Flipped, {\n    flipId: \"description-\".concat(index, \"-\").concat(data.title),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"text-md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, data.tags.map(function (tag) {\n    return tag;\n  })))), __jsx(\"div\", {\n    className: \"additional-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, data.description.map(function (i) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, i);\n  }))))));\n};\n\n_c2 = ExpandedListItem;\nexport default function AnimatedList(_ref3) {\n  _s();\n\n  var _this2 = this;\n\n  var data = _ref3.data;\n\n  var _useState = useState(null),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleChange = function handleChange(index) {\n    setFocused(focused === index ? null : index);\n  };\n\n  return __jsx(Flipper, {\n    flipKey: focused,\n    className: \"staggered-list-content\",\n    spring: \"gentle\",\n    staggerConfig: {\n      card: {\n        reverse: focused !== null\n      }\n    },\n    decisionData: focused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, data.map(function (item, i) {\n    return __jsx(\"li\", {\n      key: item.id,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, i === focused ? __jsx(ExpandedListItem, {\n      data: data[i],\n      index: focused,\n      onClick: handleChange,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }) : __jsx(ListItem, {\n      data: data[i],\n      index: i,\n      key: i,\n      onClick: handleChange,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }));\n  })));\n}\n\n_s(AnimatedList, \"6LAaG0zLb107Z/ylGF2cWYVKR44=\");\n\n_c3 = AnimatedList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListItem\");\n$RefreshReg$(_c2, \"ExpandedListItem\");\n$RefreshReg$(_c3, \"AnimatedList\");","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/animatedlist.tsx"],"names":["React","useState","Flipper","Flipped","Date","listData","Array","keys","createCardFlipId","index","shouldFlip","prev","current","ListItem","data","onClick","console","log","backgroundImage","image","backgroundPosition","title","startDate","endDate","tags","map","tag","ExpandedListItem","el","setTimeout","classList","add","backgroundSize","description","i","AnimatedList","focused","setFocused","handleChange","card","reverse","item","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\r\nimport { Date } from \"./data\";\r\n\r\nconst listData = [...Array(7).keys()];\r\nconst createCardFlipId = index => `listItem-${index}`;\r\n\r\nconst shouldFlip = index => (prev, current) =>\r\n  index === prev || index === current;\r\n\r\nconst ListItem = ({ data, index, onClick }) => {\r\n    console.log(data);\r\n  return (\r\n    <Flipped\r\n      flipId={createCardFlipId(index)}\r\n      stagger=\"card\"\r\n      shouldInvert={shouldFlip(index)}\r\n    >\r\n      <div className=\"listItem\" onClick={() => onClick(index)}>\r\n        <Flipped inverseFlipId={createCardFlipId(index)}>\r\n          <div className=\"listItemContent\">\r\n            <Flipped\r\n              flipId={`avatar-${index}`}\r\n              stagger=\"card-content\"\r\n              shouldFlip={shouldFlip(index)}\r\n              delayUntil={createCardFlipId(index)}\r\n            >\r\n              <div className=\"avatar\" style={{backgroundImage: `url(${data.image})`, backgroundPosition: 'center'}}>\r\n            </div>\r\n            </Flipped>\r\n            <div>\r\n                <Flipped\r\n                    flipId={`description-${index}-${data.title}`}\r\n                    stagger=\"card-content\"\r\n                    shouldFlip={shouldFlip(index)}\r\n                    delayUntil={createCardFlipId(index)}\r\n                    >\r\n                    <div className=\"font-bold text-lg\">{data.title}</div>\r\n                </Flipped>\r\n                <Flipped\r\n                    flipId={`description-${index}-${data.title}`}\r\n                    stagger=\"card-content\"\r\n                    shouldFlip={shouldFlip(index)}\r\n                    delayUntil={createCardFlipId(index)}\r\n                    >\r\n                    <div className=\"text-sm\"><Date startDate={data.startDate} endDate={data.endDate}/></div>\r\n                </Flipped>\r\n                <Flipped\r\n                    flipId={`description-${index}-${data.title}`}\r\n                    stagger=\"card-content\"\r\n                    shouldFlip={shouldFlip(index)}\r\n                    delayUntil={createCardFlipId(index)}\r\n                    >\r\n                    <div className=\"text-md\">{data.tags.map(tag => tag)}</div>\r\n                </Flipped>\r\n            </div>\r\n          </div>\r\n        </Flipped>\r\n      </div>\r\n    </Flipped>\r\n  );\r\n};\r\n\r\nconst ExpandedListItem = ({ data, index, onClick }) => {\r\n  return (\r\n    <Flipped\r\n      flipId={createCardFlipId(index)}\r\n      stagger=\"card\"\r\n      onStart={el => {\r\n        setTimeout(() => {\r\n          el.classList.add(\"animated-in\");\r\n        }, 400);\r\n      }}\r\n    >\r\n      <div className=\"expandedListItem\" onClick={() => onClick(index)}>\r\n        <Flipped inverseFlipId={createCardFlipId(index)}>\r\n          <div className=\"expandedListItemContent\">\r\n            <Flipped\r\n              flipId={`avatar-${index}`}\r\n              stagger=\"card-content\"\r\n              delayUntil={createCardFlipId(index)}\r\n            >\r\n            <div className=\"avatar avatarExpanded\" style={{backgroundImage: `url(${data.image})`, backgroundPosition: 'center', backgroundSize: 'auto'}} />\r\n            </Flipped>\r\n            <div>\r\n                <Flipped\r\n                    flipId={`description-${index}-${data.title}`}\r\n                    stagger=\"card-content\"\r\n                    shouldFlip={shouldFlip(index)}\r\n                    delayUntil={createCardFlipId(index)}\r\n                    >\r\n                    <div className=\"font-bold text-lg\">{data.title}</div>\r\n                </Flipped>\r\n                <Flipped\r\n                    flipId={`description-${index}-${data.title}`}\r\n                    stagger=\"card-content\"\r\n                    shouldFlip={shouldFlip(index)}\r\n                    delayUntil={createCardFlipId(index)}\r\n                    >\r\n                    <div className=\"text-sm\"><Date startDate={data.startDate} endDate={data.endDate}/></div>\r\n                </Flipped>\r\n                <Flipped\r\n                    flipId={`description-${index}-${data.title}`}\r\n                    stagger=\"card-content\"\r\n                    shouldFlip={shouldFlip(index)}\r\n                    delayUntil={createCardFlipId(index)}\r\n                    >\r\n                    <div className=\"text-md\">{data.tags.map(tag => tag)}</div>\r\n                </Flipped>\r\n            </div>\r\n            <div className=\"additional-content\">\r\n              {data.description.map(i => (\r\n                  <p>\r\n                      {i}\r\n                  </p>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </Flipped>\r\n      </div>\r\n    </Flipped>\r\n  );\r\n};\r\n\r\nexport default function AnimatedList({data}) {\r\n    const [focused, setFocused] = useState(null);\r\n    \r\n    const handleChange = (index) => {\r\n        setFocused(focused === index ? null : index)\r\n    };\r\n  \r\n    return (\r\n      <Flipper\r\n        flipKey={focused}\r\n        className=\"staggered-list-content\"\r\n        spring=\"gentle\"\r\n        staggerConfig={{\r\n          card: {\r\n            reverse: focused !== null\r\n          }\r\n        }}\r\n        decisionData={focused}\r\n      >\r\n        <ul className=\"list\">\r\n          {data.map((item, i) => {\r\n            return (\r\n              <li key={item.id}>\r\n                {i === focused ? (\r\n                  <ExpandedListItem\r\n                    data={data[i]}\r\n                    index={focused}\r\n                    onClick={handleChange}\r\n                  />\r\n                ) : (\r\n                  <ListItem data={data[i]} index={i} key={i} onClick={handleChange} />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Flipper>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}