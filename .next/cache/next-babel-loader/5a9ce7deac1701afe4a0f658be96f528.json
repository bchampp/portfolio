{"ast":null,"code":"var __jsx = React.createElement;\n\n/* Lists/Item Component - both static and animated versions*/\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport Date from '../global/Date';\nimport listStyles from '../../styles/list.module.css';\nexport function ListItem({\n  data\n}) {\n  return __jsx(Link, {\n    href: `/${data.type}/${data.id}`\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none'\n    },\n    className: listStyles.listItem\n  }, __jsx(\"div\", {\n    className: listStyles.listItemContent\n  }, __jsx(\"div\", {\n    className: listStyles.contentContainer\n  }, __jsx(\"div\", {\n    className: listStyles.title\n  }, data.title), __jsx(\"div\", {\n    className: listStyles.date\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate\n  })), __jsx(\"div\", {\n    style: {\n      flexBasis: '100%',\n      height: '0'\n    }\n  }), __jsx(\"div\", {\n    className: listStyles.subtitle\n  }, data.subtitle), __jsx(\"div\", {\n    style: {\n      flexBasis: '100%',\n      height: '0'\n    }\n  }), data.tags && __jsx(\"div\", {\n    className: listStyles.tags\n  }, data.tags.map(tag => __jsx(\"div\", {\n    className: listStyles.tag\n  }, __jsx(Link, {\n    href: `/tags/${tag}`\n  }, tag))))))));\n}\n\nconst createCardFlipId = index => `listItem-${index}`;\n\nconst shouldFlip = index => (prev, current) => index === prev || index === current;\n\nexport function ExpandedItem({\n  data,\n  index,\n  onClick\n}) {\n  return __jsx(Flipped, {\n    flipId: createCardFlipId(index),\n    stagger: \"card\",\n    onStart: el => {\n      setTimeout(() => {\n        el.classList.add(\"animated-in\");\n      }, 400);\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItem\",\n    onClick: () => onClick(index)\n  }, __jsx(Flipped, {\n    inverseFlipId: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"expandedListItemContent\"\n  }, data.image && __jsx(React.Fragment, null, __jsx(Flipped, {\n    flipId: `avatar-${index}`,\n    stagger: \"card-content\",\n    delayUntil: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"avatar avatarExpanded\",\n    style: {\n      backgroundImage: `url(${data.image})`,\n      backgroundPosition: 'center',\n      backgroundSize: '120px 120px'\n    }\n  }))), __jsx(\"div\", null, data.title && __jsx(React.Fragment, null, __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"font-bold text-lg\"\n  }, data.title)), __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"text-sm\"\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate\n  })))), data.tags && __jsx(React.Fragment, null, __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"text-md flex justify-around\"\n  }, data.tags.slice(0, 2).map(tag => __jsx(\"div\", {\n    className: \"bg-red-400 px-4 m-2 rounded\"\n  }, __jsx(Link, {\n    href: `/tags/${tag}`\n  }, __jsx(\"a\", null, tag)))))))), (data.type == 'project' || data.post) && __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(Link, {\n    href: data.type == 'project' ? `/projects/${data.id}` : data.post\n  }, __jsx(\"a\", null, \"Read more \\u2192\")))))));\n}\n;","map":null,"metadata":{},"sourceType":"module"}