{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\data.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* Main Data Component */\nimport { parseISO, format } from 'date-fns';\nimport AnimatedList from './List';\nexport default function Data({\n  type,\n  filters,\n  data\n}) {\n  const cleanData = data.filter(project => {\n    if ('tags' in project) {\n      if (filters.length == 0) {\n        // No filters yet\n        return true;\n      }\n\n      for (var i = 0; i < filters.length; i++) {\n        if (project.tags.includes(filters[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    } else {\n      return true;\n    }\n\n    ;\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, __jsx(AnimatedList, {\n    data: cleanData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }));\n} // Utility for displaying date\n\nexport function Date({\n  startDate,\n  endDate\n}) {\n  const date = parseISO(startDate);\n\n  if (endDate == 'present') {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, __jsx(\"time\", {\n      dateTime: startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }\n    }, format(date, 'LLLL d, yyyy')), \" - Present\");\n  } else {\n    const date = parseISO(endDate);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    }, __jsx(\"time\", {\n      dateTime: startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, format(date, 'LLLL d, yyyy')), \" - \", __jsx(\"time\", {\n      dateTime: endDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 72\n      }\n    }, format(date, 'LLLL d, yyyy')));\n  }\n}","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/data.tsx"],"names":["parseISO","format","AnimatedList","Data","type","filters","data","cleanData","filter","project","length","i","tags","includes","Date","startDate","endDate","date"],"mappings":";;;;AAAA;AAGA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AAEA,OAAOC,YAAP,MAAyB,QAAzB;AACA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAd,EAAuC;AAErD,QAAMC,SAAS,GAAGD,IAAI,CAACE,MAAL,CAAaC,OAAD,IAAa;AACzC,QAAI,UAAUA,OAAd,EAAuB;AACtB,UAAIJ,OAAO,CAACK,MAAR,IAAkB,CAAtB,EAAyB;AACxB;AACA,eAAO,IAAP;AACA;;AAED,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACK,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACxC,YAAIF,OAAO,CAACG,IAAR,CAAaC,QAAb,CAAsBR,OAAO,CAACM,CAAD,CAA7B,CAAJ,EAAuC;AACtC,iBAAO,IAAP;AACA;AACD;;AACD,aAAO,KAAP;AACA,KAZD,MAYO;AAAE,aAAO,IAAP;AAAc;;AAAA;AACvB,GAdgB,CAAlB;AAgBA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,YAAD;AAAc,IAAA,IAAI,EAAEJ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAKA,C,CAED;;AACA,OAAO,SAASO,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAd,EAAsC;AAC5C,QAAMC,IAAI,GAAGjB,QAAQ,CAACe,SAAD,CAArB;;AAEA,MAAIC,OAAO,IAAI,SAAf,EAA0B;AACzB,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAM,MAAA,QAAQ,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4Bd,MAAM,CAACgB,IAAD,EAAO,cAAP,CAAlC,CAAL,eAAR;AACA,GAFD,MAEO;AACN,UAAMA,IAAI,GAAGjB,QAAQ,CAACgB,OAAD,CAArB;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,QAAQ,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4Bd,MAAM,CAACgB,IAAD,EAAO,cAAP,CAAlC,CADD,SACoE;AAAM,MAAA,QAAQ,EAAED,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0Bf,MAAM,CAACgB,IAAD,EAAO,cAAP,CAAhC,CADpE,CADD;AAKA;AACD","sourcesContent":["/* Main Data Component */\r\n\r\nimport Link from 'next/link';\r\nimport { parseISO, format } from 'date-fns';\r\nimport utilStyles from '../styles/utils.module.css';\r\nimport AnimatedList from './List';\r\nexport default function Data({ type, filters, data }) {\r\n\t\r\n\tconst cleanData = data.filter((project) => {\r\n\t\t\tif ('tags' in project) {\r\n\t\t\t\tif (filters.length == 0) {\r\n\t\t\t\t\t// No filters yet\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (var i = 0; i < filters.length; i++) {\r\n\t\t\t\t\tif (project.tags.includes(filters[i])) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t\treturn false;\r\n\t\t\t} else { return true; };\r\n\t\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AnimatedList data={cleanData}/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// Utility for displaying date\r\nexport function Date({ startDate, endDate }) {\r\n\tconst date = parseISO(startDate);\r\n\r\n\tif (endDate == 'present') {\r\n\t\treturn (<div><time dateTime={startDate}>{format(date, 'LLLL d, yyyy')}</time> - Present</div>);\r\n\t} else {\r\n\t\tconst date = parseISO(endDate);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<time dateTime={startDate}>{format(date, 'LLLL d, yyyy')}</time> - <time dateTime={endDate}>{format(date, 'LLLL d, yyyy')}</time>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\t\r\n}\r\n"]},"metadata":{},"sourceType":"module"}