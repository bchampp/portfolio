{"ast":null,"code":"var __jsx = React.createElement;\n\n/* Lists/List Component - both static and animated versions*/\nimport React from 'react';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport { ListItem } from './Item';\nimport listStyles from '../../styles/list.module.css';\nexport function List({\n  filters,\n  data\n}) {\n  const listItems = data.filter(project => sortList(project, filters)).map((item, i) => {\n    return __jsx(ListItem, {\n      key: i,\n      data: data[i]\n    });\n  });\n  return __jsx(\"div\", null, listItems.length > 0 ? __jsx(\"ul\", {\n    className: listStyles.list\n  }, listItems) : __jsx(\"div\", null, \"Nothing here...yet\"));\n}\nexport function AnimatedList({\n  filters,\n  data\n}) {\n  const listItems = data.filter(project => sortList(project, filters)).map((item, i) => {\n    return __jsx(Flipped, {\n      flipId: data[i],\n      key: data[i]\n    }, __jsx(ListItem, {\n      key: i,\n      data: data[i]\n    }));\n  });\n  return __jsx(Flipper, {\n    flipKey: \"test\",\n    spring: \"noWobble\",\n    staggerConfig: {\n      default: {\n        reverse: false,\n        speed: 1\n      }\n    },\n    decisionData: {}\n  }, listItems.length > 0 ? __jsx(Flipped, {\n    flipId: \"list\"\n  }, __jsx(\"div\", null, __jsx(Flipped, {\n    inverseFlipId: \"list\"\n  }, __jsx(\"ul\", {\n    className: listStyles.list\n  }, listItems)))) : __jsx(\"div\", null, \"Nothing here...yet\"));\n}\n\nconst sortList = (project, filters) => {\n  if (filters.length == 0) {\n    return true;\n  }\n\n  for (var i = 0; i < filters.length; i++) {\n    if (project.tags && project.tags.includes(filters[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};","map":null,"metadata":{},"sourceType":"module"}