{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\data.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* Main Data Component */\nimport { parseISO, format } from 'date-fns';\nimport { List, AnimatedList } from './list';\nexport default function Data({\n  style,\n  type,\n  filters,\n  data\n}) {\n  let cleanData;\n\n  if (data) {\n    cleanData = data.filter(project => {\n      if ('tags' in project) {\n        if (filters.length == 0) {\n          // No filters yet\n          return true;\n        }\n\n        for (var i = 0; i < filters.length; i++) {\n          if (project.tags.includes(filters[i])) {\n            return true;\n          }\n        }\n\n        return false;\n      } else {\n        return true;\n      }\n    });\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }\n    }, style == 'posts' || style == 'tags' ? // <List data={cleanData} filters={filters} type={type}/>a\n    __jsx(List, {\n      type: type,\n      filters: filters,\n      data: cleanData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }\n    }) : __jsx(AnimatedList, {\n      data: cleanData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }\n    }));\n  } else {\n    cleanData = [];\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }\n    });\n  }\n} // Utility for displaying date\n\nexport function Date({\n  startDate,\n  endDate\n}) {\n  const date = parseISO(startDate);\n\n  if (endDate == 'present') {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 4\n      }\n    }, __jsx(\"time\", {\n      dateTime: startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, format(date, 'LLLL d, yyyy')), \" - Present\");\n  } else {\n    const date = parseISO(endDate);\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }\n    }, __jsx(\"time\", {\n      dateTime: startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, format(date, 'LLLL d, yyyy')), \" -\", ' ', __jsx(\"time\", {\n      dateTime: endDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }\n    }, format(date, 'LLLL d, yyyy')));\n  }\n}","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/data.tsx"],"names":["parseISO","format","List","AnimatedList","Data","style","type","filters","data","cleanData","filter","project","length","i","tags","includes","Date","startDate","endDate","date"],"mappings":";;;;AAAA;AAGA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC;AAEA,SAASC,IAAT,EAAeC,YAAf,QAAmC,QAAnC;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,CAAd,EAA8C;AAC5D,MAAIC,SAAJ;;AAEA,MAAID,IAAJ,EAAU;AACTC,IAAAA,SAAS,GAAGD,IAAI,CAACE,MAAL,CAAaC,OAAD,IAAa;AACpC,UAAI,UAAUA,OAAd,EAAuB;AACtB,YAAIJ,OAAO,CAACK,MAAR,IAAkB,CAAtB,EAAyB;AACxB;AACA,iBAAO,IAAP;AACA;;AACD,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACK,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACxC,cAAIF,OAAO,CAACG,IAAR,CAAaC,QAAb,CAAsBR,OAAO,CAACM,CAAD,CAA7B,CAAJ,EAAuC;AACtC,mBAAO,IAAP;AACA;AACD;;AACD,eAAO,KAAP;AACA,OAXD,MAWO;AACN,eAAO,IAAP;AACA;AACD,KAfW,CAAZ;AAgBA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACER,KAAK,IAAI,OAAT,IAAoBA,KAAK,IAAI,MAA7B,GACA;AACA,UAAC,IAAD;AAAM,MAAA,IAAI,EAAEC,IAAZ;AAAkB,MAAA,OAAO,EAAEC,OAA3B;AAAoC,MAAA,IAAI,EAAEE,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,GAIA,MAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADD;AAUA,GA3BD,MA2BO;AACNA,IAAAA,SAAS,GAAG,EAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;AAED,C,CAED;;AACA,OAAO,SAASO,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAd,EAAsC;AAC5C,QAAMC,IAAI,GAAGnB,QAAQ,CAACiB,SAAD,CAArB;;AAEA,MAAIC,OAAO,IAAI,SAAf,EAA0B;AACzB,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,QAAQ,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BhB,MAAM,CAACkB,IAAD,EAAO,cAAP,CAAlC,CADD,eADD;AAKA,GAND,MAMO;AACN,UAAMA,IAAI,GAAGnB,QAAQ,CAACkB,OAAD,CAArB;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,QAAQ,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BhB,MAAM,CAACkB,IAAD,EAAO,cAAP,CAAlC,CADD,QACoE,GADpE,EAEC;AAAM,MAAA,QAAQ,EAAED,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BjB,MAAM,CAACkB,IAAD,EAAO,cAAP,CAAhC,CAFD,CADD;AAMA;AACD","sourcesContent":["/* Main Data Component */\r\n\r\nimport Link from 'next/link';\r\nimport { parseISO, format } from 'date-fns';\r\nimport utilStyles from '../styles/utils.module.css';\r\nimport { List, AnimatedList } from './list';\r\n\r\nexport default function Data({ style, type, filters, data }) {\r\n\tlet cleanData: Array<any>;\r\n\r\n\tif (data) {\r\n\t\tcleanData = data.filter((project) => {\r\n\t\t\tif ('tags' in project) {\r\n\t\t\t\tif (filters.length == 0) {\r\n\t\t\t\t\t// No filters yet\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0; i < filters.length; i++) {\r\n\t\t\t\t\tif (project.tags.includes(filters[i])) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{style == 'posts' || style == 'tags' ? (\r\n\t\t\t\t\t// <List data={cleanData} filters={filters} type={type}/>a\r\n\t\t\t\t\t<List type={type} filters={filters} data={cleanData} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<AnimatedList data={cleanData} />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\tcleanData = [];\r\n\t\treturn <div></div>\r\n\t}\r\n\r\n}\r\n\r\n// Utility for displaying date\r\nexport function Date({ startDate, endDate }) {\r\n\tconst date = parseISO(startDate);\r\n\r\n\tif (endDate == 'present') {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<time dateTime={startDate}>{format(date, 'LLLL d, yyyy')}</time> - Present\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\tconst date = parseISO(endDate);\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<time dateTime={startDate}>{format(date, 'LLLL d, yyyy')}</time> -{' '}\r\n\t\t\t\t<time dateTime={endDate}>{format(date, 'LLLL d, yyyy')}</time>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}