{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Data from '../lists/Data';\nimport Link from 'next/link';\nimport tagStyles from '../../styles/tags.module.css';\nexport default function Tags({\n  tag,\n  tags,\n  work,\n  projects,\n  posts\n}) {\n  const {\n    0: filters,\n    1: setFilters\n  } = useState([]);\n  useEffect(() => {\n    if (tag) {\n      setFilters(tag);\n    }\n  }, [tag]);\n\n  const handleClick = filter => {\n    let currFilters = filters;\n    const exists = filters.indexOf(filter);\n\n    if (exists == -1) {\n      currFilters = [...filters, filter];\n      setFilters(currFilters);\n    } else {\n      currFilters.splice(exists, 1);\n      setFilters(currFilters.filter(x => x !== filter));\n    }\n\n    let route = `/tags/${currFilters[0] || ''}`;\n\n    for (var i = 1; i < currFilters.length; i++) {\n      const routePostfix = `&${currFilters[i]}`;\n      route = route.concat(routePostfix);\n    }\n\n    window.history.pushState({}, null, route);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"h3\", null, \"Tags\"), __jsx(\"div\", null, __jsx(\"div\", {\n    className: tagStyles.tags\n  }, tags && tags.map(tag => __jsx(\"div\", {\n    key: tag.name,\n    className: filters.includes(tag.name) ? tagStyles.active : tagStyles.inactive\n  }, __jsx(\"div\", {\n    onClick: () => {\n      handleClick(tag.name);\n    }\n  }, tag.name)))), __jsx(\"div\", {\n    className: tagStyles.content\n  }, __jsx(\"div\", {\n    className: tagStyles.contentContainer\n  }, __jsx(\"div\", {\n    className: tagStyles.contentTitle\n  }, __jsx(Link, {\n    href: \"/work\"\n  }, __jsx(\"a\", null, \"Work\"))), __jsx(Data, {\n    tags: true,\n    type: 'work',\n    filters: filters,\n    data: work\n  })), __jsx(\"div\", {\n    className: tagStyles.contentContainer\n  }, __jsx(\"div\", {\n    className: tagStyles.contentTitle\n  }, __jsx(Link, {\n    href: \"/projects\"\n  }, __jsx(\"a\", null, \"Projects\"))), __jsx(Data, {\n    tags: true,\n    type: 'projects',\n    filters: filters,\n    data: projects\n  }))), __jsx(\"div\", {\n    className: \"back\"\n  }, tag ? __jsx(Link, {\n    href: \"/tags\"\n  }, __jsx(\"a\", null, \"\\u2190 All Tags\")) : __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, \"\\u2190 Home\")))));\n}","map":null,"metadata":{},"sourceType":"module"}