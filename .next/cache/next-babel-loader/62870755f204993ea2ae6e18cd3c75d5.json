{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\global\\\\Date.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { parseISO, format } from 'date-fns'; // Utility for displaying date\n\nexport default function Date({\n  startDate,\n  endDate\n}) {\n  const start = format(parseISO(startDate), 'LLLL yyyy');\n  let end;\n  const endArr = endDate.split('-');\n\n  if (endArr.length === 3) {\n    const startArr = startDate.split('-');\n\n    if (startArr[0] === endArr[0]) {\n      // Same year\n      if (startArr[1] === endArr[1]) {\n        // Same month\n        // Print like 'December 2020'\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 6\n          }\n        }, __jsx(\"time\", {\n          dateTime: startDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 7\n          }\n        }, start));\n      } else {\n        end = format(parseISO(endDate), 'LLLL yyyy');\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 6\n          }\n        }, __jsx(\"time\", {\n          dateTime: startDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }\n        }, start), \" - \", __jsx(\"time\", {\n          dateTime: endDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 51\n          }\n        }, end));\n      }\n    } else {\n      end = format(parseISO(endDate), 'LLLL yyyy');\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }\n      }, __jsx(\"time\", {\n        dateTime: startDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }\n      }, start), \" - \", __jsx(\"time\", {\n        dateTime: endDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 50\n        }\n      }, end));\n    }\n  } else {\n    // to Present\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }\n    }, __jsx(\"time\", {\n      dateTime: startDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, start), \" - Present\");\n  }\n}","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/global/Date.tsx"],"names":["parseISO","format","Date","startDate","endDate","start","end","endArr","split","length","startArr"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,UAAjC,C,CAEA;;AACA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAd,EAAsC;AACpD,QAAMC,KAAK,GAAGJ,MAAM,CAACD,QAAQ,CAACG,SAAD,CAAT,EAAsB,WAAtB,CAApB;AACA,MAAIG,GAAJ;AAEA,QAAMC,MAAM,GAAGH,OAAO,CAACI,KAAR,CAAc,GAAd,CAAf;;AAEA,MAAID,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACxB,UAAMC,QAAQ,GAAGP,SAAS,CAACK,KAAV,CAAgB,GAAhB,CAAjB;;AACA,QAAIE,QAAQ,CAAC,CAAD,CAAR,KAAgBH,MAAM,CAAC,CAAD,CAA1B,EAA+B;AAC9B;AACA,UAAIG,QAAQ,CAAC,CAAD,CAAR,KAAgBH,MAAM,CAAC,CAAD,CAA1B,EAA+B;AAC9B;AACA;AACA,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAM,UAAA,QAAQ,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BE,KAA5B,CADD,CADD;AAKA,OARD,MAQO;AACNC,QAAAA,GAAG,GAAGL,MAAM,CAACD,QAAQ,CAACI,OAAD,CAAT,EAAoB,WAApB,CAAZ;AACA,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC;AAAM,UAAA,QAAQ,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BE,KAA5B,CADD,SAC6C;AAAM,UAAA,QAAQ,EAAED,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BE,GAA1B,CAD7C,CADD;AAKA;AACD,KAlBD,MAkBO;AACNA,MAAAA,GAAG,GAAGL,MAAM,CAACD,QAAQ,CAACI,OAAD,CAAT,EAAoB,WAApB,CAAZ;AAEA,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAM,QAAA,QAAQ,EAAED,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BE,KAA5B,CADD,SAC6C;AAAM,QAAA,QAAQ,EAAED,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BE,GAA1B,CAD7C,CADD;AAKA;AACD,GA7BD,MA6BO;AACN;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAM,MAAA,QAAQ,EAAEH,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BE,KAA5B,CADD,eADD;AAKA;AACD","sourcesContent":["import { parseISO, format } from 'date-fns';\r\n\r\n// Utility for displaying date\r\nexport default function Date({ startDate, endDate }) {\r\n\tconst start = format(parseISO(startDate), 'LLLL yyyy');\r\n\tlet end: Date | String;\r\n\r\n\tconst endArr = endDate.split('-');\r\n\r\n\tif (endArr.length === 3) {\r\n\t\tconst startArr = startDate.split('-');\r\n\t\tif (startArr[0] === endArr[0]) {\r\n\t\t\t// Same year\r\n\t\t\tif (startArr[1] === endArr[1]) {\r\n\t\t\t\t// Same month\r\n\t\t\t\t// Print like 'December 2020'\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<time dateTime={startDate}>{start}</time>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tend = format(parseISO(endDate), 'LLLL yyyy');\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<time dateTime={startDate}>{start}</time> - <time dateTime={endDate}>{end}</time>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tend = format(parseISO(endDate), 'LLLL yyyy');\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<time dateTime={startDate}>{start}</time> - <time dateTime={endDate}>{end}</time>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\t// to Present\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<time dateTime={startDate}>{start}</time> - Present\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}