{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\list\\\\Item.tsx\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport { Date } from \"../data\";\n\nconst createCardFlipId = index => `listItem-${index}`;\n\nconst shouldFlip = index => (prev, current) => index === prev || index === current;\n\nexport default function Item({\n  data,\n  index,\n  onClick\n}) {\n  return __jsx(Flipped, {\n    flipId: createCardFlipId(index),\n    stagger: \"card\",\n    shouldInvert: shouldFlip(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"listItem\",\n    onClick: () => onClick(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(Flipped, {\n    inverseFlipId: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"listItemContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, __jsx(Flipped, {\n    flipId: `avatar-${index}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, __jsx(Link, {\n    href: `/work/${data.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }, __jsx(\"a\", {\n    className: \"font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 37\n    }\n  }, data.title))), __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: \"text-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 70\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      flexBasis: '100%',\n      height: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }), __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 58\n    }\n  }))), data.tags && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, __jsx(Flipped, {\n    flipId: `description-${index}-${data.title}`,\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"text-md flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 41\n    }\n  }, data.tags.slice(0, 2).map(tag => __jsx(\"div\", {\n    className: \"bg-red-200 px-4 m-2 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 49\n    }\n  }, __jsx(Link, {\n    href: `/tags/${tag}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 53\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 57\n    }\n  }, tag))))))))))));\n}\n;","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/list/Item.tsx"],"names":["Link","React","Flipped","Date","createCardFlipId","index","shouldFlip","prev","current","Item","data","onClick","title","id","startDate","endDate","flexBasis","height","tags","slice","map","tag"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport React, { useState } from \"react\";\r\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\r\nimport { Date } from \"../data\";\r\n\r\nconst createCardFlipId = index => `listItem-${index}`;\r\n\r\nconst shouldFlip = index => (prev, current) =>\r\n    index === prev || index === current;\r\n\r\nexport default function Item({ data, index, onClick }) {\r\n    return (\r\n        <Flipped\r\n            flipId={createCardFlipId(index)}\r\n            stagger=\"card\"\r\n            shouldInvert={shouldFlip(index)}\r\n        >\r\n            <div className=\"listItem\" onClick={() => onClick(index)}>\r\n                <Flipped inverseFlipId={createCardFlipId(index)}>\r\n                    <div className=\"listItemContent\">\r\n                        <Flipped\r\n                            flipId={`avatar-${index}`}\r\n                            stagger=\"card-content\"\r\n                            shouldFlip={shouldFlip(index)}\r\n                            delayUntil={createCardFlipId(index)}\r\n                        >\r\n                        </Flipped>\r\n                        <div className=\"w-full\">\r\n                            <Flipped\r\n                                flipId={`description-${index}-${data.title}`}\r\n                                stagger=\"card-content\"\r\n                                shouldFlip={shouldFlip(index)}\r\n                                delayUntil={createCardFlipId(index)}\r\n                            >\r\n                                <Link href={`/work/${data.id}`}>\r\n                                    <a className=\"font-bold\">{data.title}</a>\r\n                                </Link>\r\n                            </Flipped>\r\n                            <Flipped\r\n                                flipId={`description-${index}-${data.title}`}\r\n                                stagger=\"card-content\"\r\n                                shouldFlip={shouldFlip(index)}\r\n                                delayUntil={createCardFlipId(index)}\r\n                            >\r\n                                <div className=\"text-sm float-right\"><Date startDate={data.startDate} endDate={data.endDate} /></div>\r\n                            </Flipped>\r\n\r\n                        <div style={{flexBasis: '100%', height: '0'}}></div>\r\n                        <Flipped\r\n                                flipId={`description-${index}-${data.title}`}\r\n                                stagger=\"card-content\"\r\n                                shouldFlip={shouldFlip(index)}\r\n                                delayUntil={createCardFlipId(index)}\r\n                            >\r\n                                <div className=\"text-sm\"><Date startDate={data.startDate} endDate={data.endDate} /></div>\r\n                            </Flipped>\r\n\r\n                            {data.tags &&\r\n                                <div>\r\n                                    <Flipped\r\n                                        flipId={`description-${index}-${data.title}`}\r\n                                        stagger=\"card-content\"\r\n                                        shouldFlip={shouldFlip(index)}\r\n                                        delayUntil={createCardFlipId(index)}\r\n                                    >\r\n                                        <div className=\"text-md flex\">\r\n                                            {data.tags.slice(0, 2).map(tag =>\r\n                                                <div className=\"bg-red-200 px-4 m-2 rounded\">\r\n                                                    <Link href={`/tags/${tag}`}>\r\n                                                        <a>{tag}</a>\r\n                                                    </Link>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        </div>\r\n                                    </Flipped>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Flipped>\r\n            </div>\r\n        </Flipped>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}