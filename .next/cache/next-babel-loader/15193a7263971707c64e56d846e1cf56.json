{"ast":null,"code":"var __jsx = React.createElement;\n\n/* Lists/Item Component - both static and animated versions*/\nimport Link from \"next/link\";\nimport React from \"react\";\nimport { Flipped } from \"react-flip-toolkit\";\nimport Date from '../global/Date';\nimport listStyles from '../../styles/list.module.css';\nexport function ListItem(_ref) {\n  var data = _ref.data;\n  return __jsx(Link, {\n    href: \"/\".concat(data.type, \"/\").concat(data.id)\n  }, __jsx(\"a\", {\n    style: {\n      textDecoration: 'none'\n    },\n    className: listStyles.listItem\n  }, __jsx(\"div\", {\n    className: listStyles.listItemContent\n  }, __jsx(\"div\", {\n    className: listStyles.contentContainer\n  }, __jsx(\"div\", {\n    className: listStyles.title\n  }, data.title), __jsx(\"div\", {\n    className: listStyles.date\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate\n  })), __jsx(\"div\", {\n    style: {\n      flexBasis: '100%',\n      height: '0'\n    }\n  }), __jsx(\"div\", {\n    className: listStyles.subtitle\n  }, data.subtitle), __jsx(\"div\", {\n    style: {\n      flexBasis: '100%',\n      height: '0'\n    }\n  }), data.tags && __jsx(\"div\", {\n    className: listStyles.tags\n  }, data.tags.map(function (tag) {\n    return __jsx(\"div\", {\n      className: listStyles.tag\n    }, __jsx(Link, {\n      href: \"/tags/\".concat(tag)\n    }, tag));\n  }))))));\n}\n\nvar createCardFlipId = function createCardFlipId(index) {\n  return \"listItem-\".concat(index);\n};\n\nvar shouldFlip = function shouldFlip(index) {\n  return function (prev, current) {\n    return index === prev || index === current;\n  };\n};\n\nexport function ExpandedItem(_ref2) {\n  var data = _ref2.data,\n      index = _ref2.index,\n      _onClick = _ref2.onClick;\n  return __jsx(Flipped, {\n    flipId: createCardFlipId(index),\n    stagger: \"card\",\n    onStart: function onStart(el) {\n      setTimeout(function () {\n        el.classList.add(\"animated-in\");\n      }, 400);\n    }\n  }, __jsx(\"div\", {\n    className: \"expandedListItem\",\n    onClick: function onClick() {\n      return _onClick(index);\n    }\n  }, __jsx(Flipped, {\n    inverseFlipId: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"expandedListItemContent\"\n  }, data.image && __jsx(React.Fragment, null, __jsx(Flipped, {\n    flipId: \"avatar-\".concat(index),\n    stagger: \"card-content\",\n    delayUntil: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"avatar avatarExpanded\",\n    style: {\n      backgroundImage: \"url(\".concat(data.image, \")\"),\n      backgroundPosition: 'center',\n      backgroundSize: '120px 120px'\n    }\n  }))), __jsx(\"div\", null, data.title && __jsx(React.Fragment, null, __jsx(Flipped, {\n    flipId: \"description-\".concat(index, \"-\").concat(data.title),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"font-bold text-lg\"\n  }, data.title)), __jsx(Flipped, {\n    flipId: \"description-\".concat(index, \"-\").concat(data.title),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"text-sm\"\n  }, __jsx(Date, {\n    startDate: data.startDate,\n    endDate: data.endDate\n  })))), data.tags && __jsx(React.Fragment, null, __jsx(Flipped, {\n    flipId: \"description-\".concat(index, \"-\").concat(data.title),\n    stagger: \"card-content\",\n    shouldFlip: shouldFlip(index),\n    delayUntil: createCardFlipId(index)\n  }, __jsx(\"div\", {\n    className: \"text-md flex justify-around\"\n  }, data.tags.slice(0, 2).map(function (tag) {\n    return __jsx(\"div\", {\n      className: \"bg-red-400 px-4 m-2 rounded\"\n    }, __jsx(Link, {\n      href: \"/tags/\".concat(tag)\n    }, __jsx(\"a\", null, tag)));\n  }))))), (data.type == 'project' || data.post) && __jsx(\"div\", {\n    className: \"text-center\"\n  }, __jsx(Link, {\n    href: data.type == 'project' ? \"/projects/\".concat(data.id) : data.post\n  }, __jsx(\"a\", null, \"Read more \\u2192\")))))));\n}\n;","map":null,"metadata":{},"sourceType":"module"}