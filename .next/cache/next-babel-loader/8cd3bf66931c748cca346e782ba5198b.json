{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\lists\\\\List.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\n/* Lists/List Component - both static and animated versions*/\nimport React, { useState } from 'react';\nimport { Flipper } from 'react-flip-toolkit';\nimport { ListItem, ExpandedItem } from './Item';\nexport function List(_ref) {\n  var _this = this;\n\n  var type = _ref.type,\n      filters = _ref.filters,\n      data = _ref.data;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, __jsx(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }\n  }, data.filter(function (project) {\n    return sortList(project, filters);\n  }).map(function (item, i) {\n    return __jsx(ListItem, {\n      key: i,\n      data: data[i],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    });\n  })));\n}\n_c = List;\nexport function AnimatedList(_ref2) {\n  _s();\n\n  var _this2 = this;\n\n  var data = _ref2.data;\n\n  var _useState = useState(null),\n      focused = _useState[0],\n      setFocused = _useState[1];\n\n  var handleChange = function handleChange(index) {\n    setFocused(focused === index ? null : index);\n  };\n\n  return __jsx(Flipper, {\n    flipKey: focused,\n    className: \"staggered-list-content\",\n    spring: \"gentle\",\n    staggerConfig: {\n      card: {\n        reverse: focused !== null\n      }\n    },\n    decisionData: focused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, __jsx(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, data.map(function (item, i) {\n    return __jsx(\"li\", {\n      key: item.id,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, i === focused ? __jsx(ExpandedItem, {\n      data: data[i],\n      index: focused,\n      onClick: handleChange,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }) : __jsx(ListItem, {\n      data: data[i],\n      key: i,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  })));\n}\n\n_s(AnimatedList, \"is8clbpH9g357vq6Wq42JYEDK9k=\");\n\n_c2 = AnimatedList;\n\nvar sortList = function sortList(project, filters) {\n  if (filters.length == 0) {\n    return true;\n  }\n\n  for (var i = 0; i < filters.length; i++) {\n    if (project.tags && project.tags.includes(filters[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"AnimatedList\");","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/lists/List.tsx"],"names":["React","useState","Flipper","ListItem","ExpandedItem","List","type","filters","data","filter","project","sortList","map","item","i","AnimatedList","focused","setFocused","handleChange","index","card","reverse","id","length","tags","includes"],"mappings":"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","sourcesContent":["/* Lists/List Component - both static and animated versions*/\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Flipper, Flipped } from 'react-flip-toolkit';\r\nimport { ListItem, ExpandedItem } from './Item';\r\nimport Link from 'next/link';\r\nimport Date from '../global/date';\r\n\r\nexport function List({ type, filters, data }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ul className=\"list\">\r\n\t\t\t\t{data.filter((project) => sortList(project, filters)).map((item, i) => {\r\n\t\t\t\t\treturn <ListItem key={i} data={data[i]} />;\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport function AnimatedList({ data }) {\r\n\tconst [ focused, setFocused ] = useState(null);\r\n\r\n\tconst handleChange = (index) => {\r\n\t\tsetFocused(focused === index ? null : index);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Flipper\r\n\t\t\tflipKey={focused}\r\n\t\t\tclassName=\"staggered-list-content\"\r\n\t\t\tspring=\"gentle\"\r\n\t\t\tstaggerConfig={{\r\n\t\t\t\tcard: {\r\n\t\t\t\t\treverse: focused !== null\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\tdecisionData={focused}\r\n\t\t>\r\n\t\t\t<ul className=\"list\">\r\n\t\t\t\t{data.map((item, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={item.id}>\r\n\t\t\t\t\t\t\t{i === focused ? (\r\n\t\t\t\t\t\t\t\t<ExpandedItem data={data[i]} index={focused} onClick={handleChange} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ListItem data={data[i]} key={i} />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</ul>\r\n\t\t</Flipper>\r\n\t);\r\n}\r\n\r\nconst sortList = (project, filters) => {\r\n\tif (filters.length == 0) {\r\n\t\treturn true;\r\n\t}\r\n\tfor (var i = 0; i < filters.length; i++) {\r\n\t\tif (project.tags && project.tags.includes(filters[i])) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};"]},"metadata":{},"sourceType":"module"}