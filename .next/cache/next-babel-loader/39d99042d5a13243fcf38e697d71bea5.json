{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brent Champion\\\\Documents\\\\Coding\\\\portfolio\\\\components\\\\list.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Flipper } from \"react-flip-toolkit\";\nimport Item from \"./list/Item\";\nimport ExpandedItem from './list/ExpandedItem';\nimport utilStyles from '../styles/utils.module.css';\nimport Link from 'next/link';\nimport Date from '../components/data';\nexport function AnimatedList({\n  data\n}) {\n  const {\n    0: focused,\n    1: setFocused\n  } = useState(null);\n\n  const handleChange = index => {\n    setFocused(focused === index ? null : index);\n  };\n\n  return __jsx(Flipper, {\n    flipKey: focused,\n    className: \"staggered-list-content\",\n    spring: \"gentle\",\n    staggerConfig: {\n      card: {\n        reverse: focused !== null\n      }\n    },\n    decisionData: focused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, data.map((item, i) => {\n    return __jsx(\"li\", {\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, i === focused ? __jsx(ExpandedItem, {\n      data: data[i],\n      index: focused,\n      onClick: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }) : __jsx(Item, {\n      data: data[i],\n      index: i,\n      key: i,\n      onClick: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }));\n  })));\n}\nexport function List({\n  type,\n  filters,\n  data\n}) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, __jsx(\"ul\", {\n    className: \"m-auto text-center overflow-y-auto\",\n    style: {\n      height: '60vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, data.filter(project => {\n    if ('tags' in project) {\n      if (filters.length == 0) {\n        // No filters yet\n        return true;\n      }\n\n      for (var i = 0; i < filters.length; i++) {\n        if (project.tags.includes(filters[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    } else {\n      return true;\n    }\n\n    ;\n  }).map(({\n    id,\n    startDate,\n    endDate,\n    title\n  }) => __jsx(\"li\", {\n    className: utilStyles.listItem,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: `/${type}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 8\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, title)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 8\n    }\n  }), __jsx(\"small\", {\n    className: utilStyles.lightText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 8\n    }\n  }, __jsx(Date, {\n    startDate: startDate,\n    endDate: endDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/Brent Champion/Documents/Coding/portfolio/components/list.tsx"],"names":["React","useState","Flipper","Item","ExpandedItem","utilStyles","Link","Date","AnimatedList","data","focused","setFocused","handleChange","index","card","reverse","map","item","i","id","List","type","filters","height","filter","project","length","tags","includes","startDate","endDate","title","listItem","lightText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\r\nimport Item from \"./list/Item\";\r\nimport ExpandedItem from './list/ExpandedItem';\r\nimport utilStyles from '../styles/utils.module.css';\r\nimport Link from 'next/link';\r\nimport Date from '../components/data';\r\n\r\nexport function AnimatedList({data}) {\r\n    const [focused, setFocused] = useState(null);\r\n    \r\n    const handleChange = (index) => {\r\n        setFocused(focused === index ? null : index)\r\n    };\r\n  \r\n    return (\r\n      <Flipper\r\n        flipKey={focused}\r\n        className=\"staggered-list-content\"\r\n        spring=\"gentle\"\r\n        staggerConfig={{\r\n          card: {\r\n            reverse: focused !== null\r\n          }\r\n        }}\r\n        decisionData={focused}\r\n      >\r\n        <ul className=\"list\">\r\n          {data.map((item, i) => {\r\n            return (\r\n              <li key={item.id}>\r\n                {i === focused ? (\r\n                  <ExpandedItem\r\n                    data={data[i]}\r\n                    index={focused}\r\n                    onClick={handleChange}\r\n                  />\r\n                ) : (\r\n                  <Item data={data[i]} index={i} key={i} onClick={handleChange} />\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </Flipper>\r\n    );\r\n}\r\n\r\nexport function List({type, filters, data}) {\r\n  return (\r\n  <div>\r\n\t\t\t<ul className=\"m-auto text-center overflow-y-auto\" style={{ height: '60vh' }}>\r\n\t\t\t\t{data\r\n\t\t\t\t\t.filter((project) => {\r\n\t\t\t\t\t\tif ('tags' in project) {\r\n\t\t\t\t\t\t\tif (filters.length == 0) {\r\n\t\t\t\t\t\t\t\t// No filters yet\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (var i = 0; i < filters.length; i++) {\r\n\t\t\t\t\t\t\t\tif (project.tags.includes(filters[i])) {\r\n\t\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t} else { return true; };\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.map(({ id, startDate, endDate, title }) => (\r\n\t\t\t\t\t\t<li className={utilStyles.listItem} key={id}>\r\n\t\t\t\t\t\t\t<Link href={`/${type}/${id}`}>\r\n\t\t\t\t\t\t\t\t<a>{title}</a>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<small className={utilStyles.lightText}>\r\n\t\t\t\t\t\t\t\t<Date startDate={startDate} endDate={endDate} />\r\n\t\t\t\t\t\t\t</small>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}