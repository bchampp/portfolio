{"pageProps":{"postData":{"id":"auxme","contentHtml":"<p>AuxMe is an <strong>all-inclusive</strong> app to control music and lights.\r\nThe basic concept is a shared music queue, where users can add, upvote and downvote songs. Each room has <strong>Admins</strong> which have access to protected endpoints, like pause, skip...etc, anything that will directly influence the music playing.</p>\n<h2>Control System</h2>\n<h1>Website</h1>\n<h2>API</h2>\n<p>We started by building a REST API. Since AuxMe is being deployed as both a webapp and a mobile app, our backend needed to be reusable so that both clients could make requests to the same set of endpoints.</p>\n<p>Some of the endpoints look like:</p>\n<ul>\n<li><code>POST auxme.ca/login/spotify</code></li>\n<li><code>POST auxme.ca/create-room</code></li>\n<li><code>GET auxme.ca/join-room?id=123</code></li>\n<li><code>POST auxme.ca/queue/upvote?song=&#x3C;some_song_id></code></li>\n</ul>\n<p>We tested the endpoints on our personal music streaming accounts with an app called PostMan.</p>\n<h2>Client</h2>\n<p>We built our website client with React. We threw a simple UI together, tied it with our API and started testing.</p>\n","title":"AuxMe","startDate":"2020-09-09","endDate":"present","type":"projects","subtitle":"A democratic, shared, cross-platform music queue","img":"/images/projects/auxme.PNG","link":"https://github.com/bchampp/auxme","tags":["spotify","serverless","websocket","react","c++","control-system"],"exists":false}},"__N_SSG":true}